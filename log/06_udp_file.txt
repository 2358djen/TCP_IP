#include "../include/func.h"


#include <sys/socket.h>

ssize_t sendto(int sock,void * buff,size_t nbytes,int flag,struct sockaddr * to,socklen_t addrlen);
    成功:传输文件字节数 失败:-1

    sock:   用于传输数据的UDP套接字文件描述符
    buff:   保存待传输数据的缓冲地址值
    nbytes: 待传输的数据长度,以字节为单位
    flags:  可选参数,若没有则传递0
    to:     存有目标地址的sockaddr结构体变量地址值
    addrlen:传递给参数to的地址值结构体变量长度

    调用sandto函数传输数据前应当完成对套接字的地址分配工作
    若没有,则在首次调用sendto时自动分配IP和端口,且一直保留到程序结束(IP使用主机IP,端口随机)
    工作流程:
    1.向UDP套接字注册目标IP和端口
    2.传输数据
    3.删除UDP套接字中注册的目标的地址信息
    每次调用都会经过上面三个过程,因此如果长时间和同一目标通信效率就会变低(解决:将未连接套接字换成已连接套接字)

ssize_t recvfrom(int sock,void * buff,size_t nbytes,int flags,struct sockaddr * from,socklen_t * addrlen);
    成功:接受字节数 失败:-1

    sock:   用于接收数据的UDP套接字文件描述符
    buff:   保存接受数据的缓冲地址值
    nbytes: 可接收的最大字节数(不可超出buff)
    flags:  可选参数,如没有则传递0
    from:   存有发送端地址信息的sockaddr结构体变量的地址值
    addrlen:保存参数from的结构体变量长度的变量地址值